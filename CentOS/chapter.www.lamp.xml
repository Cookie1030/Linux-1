<?xml version="1.0" encoding="UTF-8"?>
<section id="httpd">
	<title>Apache httpd</title>
	<screen>
[root@development httpd-2.2.14]# yum install zlib-devel.x86_64

./configure --prefix=/usr/local/httpd-2.2.14 \
--with-mpm=worker \
--enable-so \
--enable-mods-shared=all \
--enable-static-support \
--enable-static-htpasswd \
--enable-static-htdigest \
--enable-static-ab \
--disable-include \
--disable-actions \
--disable-alias \
--disable-asis \
--disable-autoindex \
--disable-auth_basic \
--disable-authn_file \
--disable-authn_default \
--disable-authz_groupfile \
--disable-authz_user \
--disable-authz_default \
--disable-cgi \
--disable-cgid \
--disable-env \
--disable-negotiation \
--disable-status \
--disable-userdir
	</screen>


		<section id="httpd.install">
		<title>Install</title>
		<para>Apache</para>
		<screen>
			<![CDATA[
[root@development ~]# yum -y install httpd
			]]>
		</screen>
		<para>PHP</para>
		<screen>
			<![CDATA[
[root@development ~]# yum -y install php
[root@development ~]# yum -y install php-mysql php-gd php-mbstring php-bcmath
[neo@development ~]$ sudo yum -y install php-pecl-memcache
			]]>
		</screen>
		<para>mysql</para>
		<screen>
			<![CDATA[
[root@development ~]# yum -y install mysql-server
			]]>
		</screen>
	</section>
	<section id="httpd.uninstall">
		<title>Uninstall</title>
		<screen>
# yum remove httpd
		</screen>
	</section>
	<section id="httpd.conf">
		<title>Configure</title>
		<section>
			<title>Apache</title>
			<screen>
			<![CDATA[

			]]>
			</screen>
			<section>
				<title>VirtualHost</title>
				<screen>
				<![CDATA[
[root@development ~]# vim /etc/httpd/conf.d/vhost.conf
#
# Use name-based virtual hosting.
#
NameVirtualHost *:80
#
# NOTE: NameVirtualHost cannot be used without a port specifier
# (e.g. :80) if mod_ssl is being used, due to the nature of the
# SSL protocol.
#

#
# VirtualHost example:
# Almost any Apache directive may go into a VirtualHost container.
# The first VirtualHost section is used for requests without a known
# server name.
#
<VirtualHost *:80>
    ServerAdmin webmaster@dummy-host.example.com
    DocumentRoot /www/docs/dummy-host.example.com
    ServerName dummy-host.example.com
    ErrorLog logs/dummy-host.example.com-error_log
    CustomLog logs/dummy-host.example.com-access_log common
</VirtualHost>

				]]>
				</screen>
			</section>
		</section>
		<section>
			<title>MySQL</title>
			<para>reset mysql's password</para>
			<screen>
			<![CDATA[
[root@development ~]# /usr/bin/mysqladmin -u root password 'new-password'
[root@development ~]# /usr/bin/mysqladmin -u root -h development.domain.org password 'new-password'
			]]>
			</screen>
			<para>Alternatively you can run:</para>
			<screen>
			<![CDATA[
[root@development ~]# /usr/bin/mysql_secure_installation
			]]>
			</screen>
		</section>
	</section>
	<section id="httpd.srv">
		<title>Starting</title>
		<para>levels</para>
		<screen>
		<![CDATA[
[root@development ~]# chkconfig --list mysqld
mysqld          0:off   1:off   2:off   3:off   4:off   5:off   6:off

[root@development ~]# chkconfig --list httpd
httpd           0:off   1:off   2:off   3:off   4:off   5:off   6:off


[root@development ~]# chkconfig httpd on
[root@development ~]# chkconfig --list httpd
httpd           0:off   1:off   2:on    3:on    4:on    5:on    6:off

[root@development ~]# chkconfig mysqld on
[root@development ~]# chkconfig --list mysqld
mysqld          0:off   1:off   2:on    3:on    4:on    5:on    6:off


		]]>
		</screen>
		<para>Apache</para>
		<screen>
		<![CDATA[
[root@development ~]# service httpd start
		]]>
		</screen>
		<para>MySQL</para>
		<screen>
		<![CDATA[
[root@development ~]# service mysqld start
		]]>
		</screen>
		<screen>
		<![CDATA[
[root@development ~]# netstat -nat | grep 80
tcp        0      0 :::80                       :::*                        LISTEN

[root@development ~]# netstat -nat | grep 3306
tcp        0      0 0.0.0.0:3306                0.0.0.0:*                   LISTEN
		]]>
		</screen>
	</section>

	<section id="httpd.faq">
		<title>FAQ</title>
		<section>
			<title>compile php</title>
			<screen>
[root@development php-5.3.0]# yum install libxml2-devel
[root@development php-5.3.0]# yum install curl-devel
[root@development php-5.3.0]# yum install gd-devel
[root@development php-5.3.0]# yum install libjpeg-devel
[root@development php-5.3.0]# yum install libpng-devel
[root@development php-5.3.0]# yum install openldap-devel
[root@development php-5.3.0]# yum install mysql-devel
[root@development php-5.3.0]# yum install net-snmp-devel
			</screen>
		</section>
	</section>
</section>

<section id="nginx">
	<title>Nginx</title>
	<screen>
yum install nginx
yum -y install mysql mysql-server
yum -y install php php-cgi php-mysql php-mbstring php-gd php-fastcgi
yum -y install perl-DBI perl-DBD-MySQL
	</screen>
	<section id="nginx.install">
		<title>install nginx</title>
		<section id="nginx.spawn-fcgi">
			<title>spawn-fcgi script</title>
			<screen>
yum -y install spawn-fcgi
			</screen>
			<para>/etc/sysconfig/spawn-fcgi</para>
			<para>移除SOCKET与OPTIONS注释, apache改为nginx</para>
			<screen>
# cat /etc/sysconfig/spawn-fcgi
# You must set some working options before the "spawn-fcgi" service will work.
# If SOCKET points to a file, then this file is cleaned up by the init script.
#
# See spawn-fcgi(1) for all possible options.
#
# Example :
SOCKET=/var/run/php-fcgi.sock
OPTIONS="-u apache -g apache -s $SOCKET -S -M 0600 -C 32 -F 1 -P /var/run/spawn-fcgi.pid -- /usr/bin/php-cgi"
			</screen>

			<screen>
			<![CDATA[
chkconfig spawn-fcgi on
			]]>
			</screen>
			<para>starting spawn-fcgi</para>
			<screen>
/etc/init.d/spawn-fcgi start
			</screen>
			<para>check port</para>
			<screen>
# netstat -nl
Active Internet connections (only servers)
Proto Recv-Q Send-Q Local Address               Foreign Address             State
tcp        0      0 0.0.0.0:22                  0.0.0.0:*                   LISTEN
tcp        0      0 :::22                       :::*                        LISTEN
Active UNIX domain sockets (only servers)
Proto RefCnt Flags       Type       State         I-Node Path
unix  2      [ ACC ]     STREAM     LISTENING     25282  /var/run/php-fcgi.sock
unix  2      [ ACC ]     STREAM     LISTENING     8227   @/com/ubuntu/upstart
			</screen>
			<screen>
			<para>Unix domain socket</para>
			<![CDATA[

        location ~ \.php$ {
            fastcgi_pass   unix:/var/run/php-fcgi.sock;
            fastcgi_index  index.php;
            fastcgi_param  SCRIPT_FILENAME  /var/www/nginx-default$fastcgi_script_name;
            include        fastcgi_params;
        }
			]]>
			</screen>
			<para>TCP/IP</para>

			<screen>
/usr/bin/spawn-fcgi -a 127.0.0.1 -p 9000 -u nginx -g nginx -d /www -C 32 -F 1 -P /var/run/spawn-fcgi.pid -f /usr/bin/php-cgi
			</screen>
			<para> </para>
			<screen>
			<![CDATA[
        location ~ \.php$ {
            fastcgi_pass   127.0.0.1:9000;
            fastcgi_index  index.php;
            fastcgi_param  SCRIPT_FILENAME  /var/www/nginx-default$fastcgi_script_name;
            include        fastcgi_params;
        }
			]]>
			</screen>
			<screen>
# netstat -tulpn | grep :9000
tcp        0      0 127.0.0.1:9000              0.0.0.0:*                   LISTEN      26877/php-cgi
			</screen>
			<screen>
chkconfig nginx on
			</screen>
			<para>check config</para>
			<screen>
nginx -t
			</screen>
		</section>
		<section id="nginx.php-fpm">
			<title>php-fpm</title>
			<screen>
rpm -Uvh http://download.fedora.redhat.com/pub/epel/6/x86_64/epel-release-6-5.noarch.rpm
yum install nginx -y
			</screen>
			<para></para>
			<screen>
chkconfig nginx on
			</screen>
			<para>check config</para>
			<screen>
nginx -t
			</screen>
			<para>其他 php-fpm YUM源</para>
			<screen>
rpm --import http://rpms.famillecollet.com/RPM-GPG-KEY-remi
rpm -ivh http://rpms.famillecollet.com/enterprise/remi-release-6.rpm
			</screen>
			<screen>
# rpm -Uvh http://centos.alt.ru/repository/centos/6/i386/centalt-release-6-1.noarch.rpm
# yum update
			</screen>
		</section>
		<section id="nginx.fastcgi.backend">
			<title>fastcgi backend</title>
			<screen>
			<![CDATA[
upstream backend  {
  server   localhost:1234;
}

fastcgi_pass   backend;
			]]>
			</screen>
		</section>
	</section>
</section>